{"version":3,"sources":["components/LogoBar.js","components/Banner.js","components/Grid.js","App.js","serviceWorker.js","index.js"],"names":["bar","background","LogoBar","react_default","a","createElement","Row","style","Col","md","className","color","this","props","highScore","score","React","Component","Banner","Fragment","row","width","margin","Grid","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","orderArray","images","idLog","lose","console","log","setState","alert","win","shuffle","event","target","placeholder","copy","indexOf","id","push","i","length","j","Math","floor","random","_ref","_this2","LogoBar_LogoBar","components_Banner","alt","onClick","src","image","App","components_Grid","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86313075.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Row, Col} from \"reactstrap\";\r\nimport ReactDOM from \"react-dom\"\r\n\r\n\r\nlet bar = {\r\n    background:\"lightblue\"\r\n}\r\n\r\n\r\nlet scorePlaceholder = -1;\r\n\r\nclass LogoBar extends React.Component{\r\n    \r\nrender(){\r\n    return(\r\n        <Row style= {bar}>\r\n        <Col md = \"2\"> </Col>\r\n        <Col className = 'btn' color=\"primary\" >Clicky Games</Col>\r\n        <Col >\r\n        </Col>\r\n        <Col >\r\n        High Score: {this.props.highScore}           Your Score: {this.props.score}\r\n        </Col>\r\n        <Col md =\"1\">\r\n        </Col>\r\n        </Row>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { LogoBar}; \r\n","import React from \"react\";\r\nimport {Jumbotron, Row} from \"reactstrap\";\r\nimport \"./styles.css\"\r\n\r\n\r\n    \r\n    \r\nconst Banner  = ()=>{\r\n    return (<>\r\n        <Row className=\"banner\">    \r\n        <div className= \"floatingTitle\"> Dont Click the Same Picture Twice!!!!\r\n            </div>  \r\n            </Row>\r\n          \r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport {Row} from 'reactstrap';\r\nimport images from '../images.json';\r\nimport {LogoBar} from \"./LogoBar\";\r\nimport Banner from \"./Banner\";\r\nimport \"./styles.css\"\r\n\r\nlet row = {\r\n background: \"grey\",\r\n  width: \"100%\",\r\n  margin: \"0 auto\"\r\n}\r\n\r\nclass Grid extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n \r\n state={\r\n    orderArray: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\r\n    images:[images[0], images[1], images[2], images[3],images[4], images[5], images[6], images[7],images[8], images[9], images[10], images[11],images[12], images[13], images[14], images[15],],\r\n    idLog:[] ,\r\n    score: 0,\r\n    highScore: 0,\r\n    \r\n\r\n };\r\n\r\n lose = () => {\r\n   console.log(\"you lose\")\r\n   this.setState({score: 0, idLog:[]})\r\n   alert(\"You Lost!!!!\")\r\n }\r\n\r\n win = () => {\r\n    alert(\"You win!!!\")\r\n    this.setState({score:0, idLog:[]})\r\n }\r\n\r\n\r\nshuffle = (event) => {\r\n       console.log(event.target)\r\n        this.placeholder = [];\r\n       \r\n        let copy = this.state.idLog;\r\n        \r\n        console.log(this.state.idLog)\r\n        console.log(this.state.idLog.indexOf(event.target.id))\r\n      \r\n\r\n        if(this.state.idLog.indexOf(event.target.id)===-1){\r\n          this.setState({score: this.state.score+1}, ()=>{\r\n            if(this.state.score>this.state.highScore){\r\n              this.setState({highScore:this.state.score})\r\n            }\r\n            if(this.state.score === 16){\r\n              this.win();\r\n            }\r\n          })\r\n          copy.push(event.target.id);\r\n          this.setState({idLog:copy}, ()=>{\r\n          console.log(this.state.idLog)\r\n          for (let i = this.state.orderArray.length - 1; i > 0; i--) {      //Unique Random Number 0-15\r\n          \r\n            let j = Math.floor(Math.random() * (i + 1));        // random index from 0 to i\r\n            [this.state.orderArray[i], this.state.orderArray[j]] = [this.state.orderArray[j], this.state.orderArray[i]]; // swap elements\r\n          }\r\n       \r\n          for(let i =0; i<this.state.orderArray.length; i++){   // Placeholder Image Array\r\n          this.placeholder.push(images[this.state.orderArray[i]])\r\n          }\r\n          \r\n          this.setState({images: this.placeholder})  \r\n        })}else { \r\n          \r\n          this.lose();}\r\n       \r\n      }\r\n\r\nrender(){\r\n\r\n  \r\nreturn(\r\n<>\r\n  <LogoBar {...this.state} > </LogoBar>\r\n  <Banner></Banner>  \r\n   \r\n  <div className = \"gridStyle\"> \r\n   <Row style = {row}>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[0].id} src = {this.state.images[0].image}>\r\n            </img>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[1].id} src = {this.state.images[1].image}>\r\n            </img>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[2].id} src = {this.state.images[2].image}>\r\n            </img>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[3].id} src = {this.state.images[3].image}>\r\n            </img>\r\n    </Row>\r\n    <Row style = {row}>\r\n            <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[4].id} src = {this.state.images[4].image}>\r\n            </img>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[5].id} src = {this.state.images[5].image}>\r\n            </img>\r\n            <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[6].id} src = {this.state.images[6].image}>\r\n            </img>\r\n            <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[7].id} src = {this.state.images[7].image}>\r\n            </img>\r\n    </Row>\r\n    <Row style = {row}>\r\n            <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[8].id} src = {this.state.images[8].image}>\r\n            </img>\r\n            <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[9].id} src = {this.state.images[9].image}>\r\n            </img>\r\n            <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[10].id} src = {this.state.images[10].image}>\r\n            </img>\r\n            <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[11].id} src = {this.state.images[11].image}>\r\n            </img>\r\n    </Row>\r\n    <Row style = {row}>\r\n           <img alt= \"character Card\"  className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[12].id} src = {this.state.images[12].image}>\r\n            </img>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[13].id} src = {this.state.images[13].image}>\r\n            </img>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[14].id} src = {this.state.images[14].image}>\r\n            </img>\r\n            <img alt= \"character Card\" className = \"character-card\" onClick={(event)=>this.shuffle(event)}  id = {this.state.images[15].id} src = {this.state.images[15].image}>\r\n            </img>\r\n    </Row>\r\n    </div>\r\n    </>)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default Grid;","import React from 'react';\nimport Grid from \"./components/Grid\"\nimport LogoBar from \"./components/LogoBar\"\n\nfunction App() {\n  return (\n  <>   \n \n    <Grid />\n  </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}